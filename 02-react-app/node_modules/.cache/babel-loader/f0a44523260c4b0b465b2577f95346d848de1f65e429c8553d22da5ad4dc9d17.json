{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nexport const useProduct = ({\n  onChange\n}) => {\n  _s();\n  const [counter, setCounter] = useState(0);\n  const increaseBy = value => {\n    const newValue = Math.max(counter + value, 0);\n    setCounter(newValue);\n    onChange && onChange({\n      count: newValue\n    });\n  };\n  return {\n    counter,\n    increaseBy\n  };\n};\n_s(useProduct, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");","map":{"version":3,"names":["useState","useProduct","onChange","_s","counter","setCounter","increaseBy","value","newValue","Math","max","count"],"sources":["/Users/matias/Desktop/Courses/fh-react-pro/02-react-app/src/02-component-patterns/hooks/useProduct.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { onChangeArgs, Product } from \"../interfaces/interfaces\";\n\ninterface useProductArgs {\n  product: Product;\n  onChange?: (args: onChangeArgs) => void;\n}\n\nexport const useProduct = ({ onChange }: useProductArgs) => {\n  const [counter, setCounter] = useState(0);\n\n  const increaseBy = (value: number) => {\n    const newValue = Math.max(counter + value, 0);\n\n    setCounter(newValue);\n\n    onChange && onChange({ count: newValue });\n  };\n\n  return { counter, increaseBy };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAQhC,OAAO,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMM,UAAU,GAAIC,KAAa,IAAK;IACpC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACN,OAAO,GAAGG,KAAK,EAAE,CAAC,CAAC;IAE7CF,UAAU,CAACG,QAAQ,CAAC;IAEpBN,QAAQ,IAAIA,QAAQ,CAAC;MAAES,KAAK,EAAEH;IAAS,CAAC,CAAC;EAC3C,CAAC;EAED,OAAO;IAAEJ,OAAO;IAAEE;EAAW,CAAC;AAChC,CAAC;AAACH,EAAA,CAZWF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}